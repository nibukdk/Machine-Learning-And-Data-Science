) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data, aes(Embarked, fill = factor(Survived))) +
geom_bar( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data, aes(Embarked, fill = factor(Survived))) +
geom_bar( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
destinationVsSurvival <- ggplot(train_data, aes(Embarked, fill = factor(Survived))) +
geom_bar( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fill = factor(Survived))) +
geom_bar( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fill = factor(Survived))) +
geom_bar( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fill = factor(Survived))) +
geom_bar( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
?norm
norm(train_data_with_cabin$Fare)
norm(train_data_with_cabin$Fare, drop=F)
scale(train_data_with_cabin$Fare)
ggplot(train_data_with_cabin, aes(Cabin,scale(Fare) fill = factor(Survived))) +
geom_point( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
fareScale <- scale(train_data_with_cabin$Fare)
ggplot(train_data_with_cabin, aes(Cabin, fareScale,fill = factor(Survived))) +
geom_point( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fareScale,fill = Survived)) +
geom_point( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fareScale,fill = Survived)) +
geom_point( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
factor
ggplot(train_data_with_cabin, aes(Cabin, fareScale,fill = factor(Survived))) +
geom_point( color = "black") +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fareScale,fill = factor(Survived))) +
geom_point( ) +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +
geom_point( ) +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +
geom_point(fill = factor(Survived) ) +
theme(
axis.title.x = element_text(color = "Red"),
axis.title = element_text(family = "Courier"),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(color = "Red"),
axis.text.y = element_text(size = 20) ,
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = c(0.2,1),
legend.justification = c(1, 1),
plot.title = element_text(
size = 20,
colour = "DarkBlue",
hjust = 0.5
)
) +
xlab('Age group') +
ylab('Number of passenger') +
ggtitle("Destination vs Survival") +
# scale_x_discrete(labels = c(" Cherbourg", "Queenstown", "Southampton")) +
scale_fill_discrete(
name = "Legend",
breaks = c(0, 1),
labels = c('Died', 'Survived')
)
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +
geom_point(fill = factor(Survived) )
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +
geom_point(fill = factor(Survived) )
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +
geom_point(fill = factor(Survived))
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +   geom_point(fill = factor(Survived))
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +   geom_point(fill = factor(Survived))
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +   geom_point(fill = factor(train_data_with_cabi$Survived))
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +   geom_point(fill = factor(train_data_with_cabin$Survived))
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +   geom_point(fill = train_data_with_cabin$Survived)
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +geom_area()
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +   geom_point(aes(fill = factor(train_data_with_cabin$Survived)))
ggplot(train_data_with_cabin, aes(Cabin, fareScale)) +   geom_point(aes(colour = factor(train_data_with_cabin$Survived)))
ggplot(train_data_with_cabin, aes(Cabin, fareScale, colour = factor(Survived)) +   geom_point()
ggplot(train_data_with_cabin, aes(Cabin, fareScale, colour = factor(Survived)) +
ggplot(train_data_with_cabin, aes(Cabin, fareScale, colour = factor(Survived))) +
geom_point()
ggplot(train_data_with_cabin, aes(Cabin, fareScale, colour = factor(Pclass))) +
geom_point()
ggplot(train_data_with_cabin, aes(fareScale, Cabin, , colour = factor(Pclass))) +
geom_point()
ggplot(train_data_with_cabin, aes(fareScale, Cabin, colour = factor(Pclass))) +
geom_point()
train_data_without_cabin = train_data[train_data$Cabin == "", c('Pclass', 'Fare', 'Cabin')]
View(train_data_without_cabin)
train_data_with_cabin = train_data[train_data$Cabin != "",c('Pclass', 'Fare', 'Cabin') ]
View(train_data_with_cabin)
train_data_with_cabin = train_data[train_data$Cabin != "",c('Passengerid','Pclass', 'Fare', 'Cabin') ]
train_data_without_cabin = train_data[train_data$Cabin == "", c('PassengerId','Pclass', 'Fare', 'Cabin')]
train_data_with_cabin = train_data[train_data$Cabin != "",c('PassengerId','Pclass', 'Fare', 'Cabin') ]
ggplot(train_data_with_cabin, aes(fareScale, Pclass, colour = factor(Pclass))) +
geom_point()
ggplot(train_data_with_cabin, aes(fareScale, Pclass, colour = factor(Cabin))) +
geom_point()
#Lets predic Cabin for data first
train_data_with_cabin$Fare = scale(train_data_with_cabin$Fare)
set.seed(123)
split = sample(train_data_with_cabin$Cabin, SplitRatio=0.7)
#Lets predic Cabin for data first
library(caTools)
train_data_with_cabin$Fare = scale(train_data_with_cabin$Fare)
set.seed(123)
split = sample(train_data_with_cabin$Cabin, SplitRatio=0.7)
split = sample(train_data_with_cabin$Cabin, SplitRatio=0.7)
train_set_for_Cabin = subset(train_data_with_cabin, split==T)
split = sample(train_data_with_cabin$Cabin, SplitRatio=0.7)
train_set_for_Cabin = subset(train_data_with_cabin, split==T)
split = sample.split(train_data_with_cabin$Cabin, SplitRatio=0.7)
train_set_for_Cabin = subset(train_data_with_cabin, split==T)
test_set_for_cabin = subset(train_data_with_cabin, split==F)
install.packages('e1071')
library(e1071)
?`e1071-deprecated`
?svm
classifier = svm(Cabin~.,
data= train_set_for_Cabin,
kernel='radial')
View(test_set_for_cabin)
y_pred= predict(classifier, test_set_for_cabin[-4])
y_pred
confusion_matrix = table(test_set_for_cabin[,4], y_pred)
confusion_matrix
?confusion.matrix
?confusionMatrix
confusionMatrix(confusion_matrix)
?table
confusionMatrix(test_set_for_cabin[,4],  y_pred)
library(caret)
library(caret)
Error in confusionMatrix
confusionMatrix(test_set_for_cabin[,4],  y_pred)
confusionMatrix(test_set_for_cabin[,4],y_pred)
confusion_matrix = table(test_set_for_cabin$Fare, y_pred)
confusion_matrix = confusionMatrix(test_set_for_cabin$Fare, y_pred)
confusion_matrix = confusionMatrix(test_set_for_cabin$Cabin, y_pred)
confusion_matrix = confusionMatrix(test_set_for_cabin[,4, drop=T], y_pred)
confusion_matrix = confusionMatrix(test_set_for_cabin[,4, drop=F], y_pred)
test_set_for_cabin[,4, drop=F]
test_set_for_cabin[,4]
y_pred
test_set_for_cabin[,4, drop=F]
typeof()
is.matrix(y_pred)
is.vector(y_pred)
is.data.frame(y_pred)
typeof(y_pred)
confusion_matrix = confusionMatrix(test_set_for_cabin$Cabin, y_pred)
length(y_pred)
# classifier = svm(Cabin~.,
#                  data= train_set_for_Cabin,
#                  kernel='radial')
classifier <- train(form= Cabin~.,data=train_set, method="svmRadial")
# classifier = svm(Cabin~.,
#                  data= train_set_for_Cabin,
#                  kernel='radial')
classifier <- train(form= Cabin~.,data=train_set_for_Cabin, method="svmRadial")
# classifier = svm(Cabin~.,
#                  data= train_set_for_Cabin,
#                  kernel='radial')
classifier <- train(Cabin~.,data=train_set_for_Cabin, method="svmRadial")
?train
# classifier = svm(Cabin~.,
#                  data= train_set_for_Cabin,
#                  kernel='radial')
classifier <- svm(Cabin~.,data=train_set_for_Cabin, method="svmRadial")
y_pred= predict(classifier, test_set_for_cabin[-4])
confusion_matrix = confusionMatrix(test_set_for_cabin$Cabin, y_pred)
y_pred
confusion_matrix = table(test_set_for_cabin$Cabin, y_pred)
confusion_matrix
# classifier = svm(Cabin~.,
#                  data= train_set_for_Cabin,
#                  kernel='radial')
classifier <- svm(Cabin~.,data=train_set_for_Cabin, method="radial")
y_pred= predict(classifier, test_set_for_cabin[-4])
confusion_matrix = table(test_set_for_cabin$Cabin, y_pred)
confusion_matrix
